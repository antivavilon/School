  //1. Пример вывода  слова внутри  двухмерном массиве.
 //string[,] table = new string[2,5];
 //table[1,2] = "слово";
// for( int rows = 0; rows < 2 ; rows++ )
       //{
       //for( int columns = 0; columns < 5 ; columns++)
    //     {
      //    Console.WriteLine($"-{table[rows, columns]}-");
//         }    
  //     }


//2. Пример вывода массиваиз из 3 строк и 4 столбцов.


     // int[,] matrix = new int[3,4];
      // for (int row = 0; row < matrix.GetLength(0) ; row++)
       //{ 
       // for(int column = 0; column < matrix.GetLength(1); column++)
       // {
      //  Console.Write($"{matrix[row,column]} ");
    //  } 
  //      Console.WriteLine();
//       }

      //3. Создаем метод, который создает такую двухмекрную матрицу и вывводит ее на экран.(массив)

      //void PrintArray(int[,] matr)
       //{   
      // for (int row = 0; row < matr.GetLength(0) ; row++)
       //{ 
        //for(int column = 0; column < matr.GetLength(1); column++)
       // {
      //  Console.Write($"{matr[row,column]} ");
       // } 
       //Console.WriteLine();          //Переходим на другую строчку, чтобы печатать в еесмколько столбиков
      // }
      // }
        // PrintArray(matrix);
       //  Console.WriteLine();
      ////4. Создаем метод, который заполняет массив.
      //void FillArray(int[,] matr)
       //{
        
      //  for (int row = 0; row < matr.GetLength(0) ; row++)
         //  { 
         //   for(int column = 0; column < matr.GetLength(1); column++)
         //     {
       //        matr[row, column] = new Random().Next(9);      
     //         } 
   //        }
 //       }
 
//FillArray(matrix);

// PrintArray(matrix);
  
  //6. Картинка палец вверх.
//  int[,] pic = new int[,]
//{
//{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
//{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
//{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
//{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
//{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
//{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
//{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
//{0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
//{0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
//{0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
//{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 }//,/////
//{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },/////
//{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
//{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
//{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
//{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
//{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
//{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
//{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
//{0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
//{0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
//{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 },
//{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
//};
 //6_1. Создаем метод, котолрый выделяет(выыявляет) картинку из общего поля.
  //     В методе иы пробегаем по всем точкам и проверяем , если точка (0), то
  //     мы печатаекм " " ( пробел / пустоту). Если же проверка показывает (1),
  //     на этом месте печатаем к примеру "+".

//void PrintImage(int[,] image)
//{
 //for (int i = 0; i < image.GetLength(0); i++)
 //{
 //for (int j = 0; j < image.GetLength(1); j++)
 //{
 //if(image[i,j] == 0) Console.Write($" ");
 //else Console.Write($"+");
 //}
 //Console.WriteLine();
 //}
//}
//PrintImage(pic);


//6_2. Создаем метод, который закрашивает замкнутую область. Пример рекурсии.
  //      Сначало программа проверяет закрашен ли пиксель?( int (row, col) == 0) .
  //      Если нет, то красим пиксель единичко  (row, col) == 1) и вызываем методом 
    //     рекурсии движение на следующий пиксель. 
            
//void FillImage(int row, int col)
//{
 //if (pic[row, col] == 0)
 //{
 //pic[row, col] = 1;
 //FillImage(row - 1, col);
 //FillImage(row, col - 1);
 //FillImage(row + 1, col);
 //FillImage(row, col + 1);
 //}
//}
//PrintImage(pic);
//FillImage(13, 13);
//PrintImage(pic);


       // 7. Создаем метод для вычисления факториала. Пример рекупсии.
       //double Factorial(double n)
      //  {
      // if (n == 1) return 1 ;
      // else return n * Factorial(n-1) ;
      //   }
     //Console.WriteLine(Factorial(12));

    // for (double i = 1; i < 40; i++)
     //  {
   //     Console.WriteLine($"{i}!= {Factorial(i)}");
 //    }


 //8. Вычисление числа фибоначи. Пример рекурсии.

 //int f(n) = f( n -1) + f( n - 2)
 double Fibonacci (double n)  
 {
 if (n == 1 ||  n == 2) return 1;
  else return  Fibonacci(n - 1) + Fibonacci(n - 2);

 }
 for (double i = 1; i < 50; i++)
 {
  Console.WriteLine($"f({i}) =  {Fibonacci(i)}");
 }

    